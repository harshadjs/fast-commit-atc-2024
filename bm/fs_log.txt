
#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 15:41:48 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        10000        16384        296.4            42772

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 15:42:28 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        10000        16384        324.9            46755

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 15:43:06 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        10000        16384        313.4            43923

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 15:43:45 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        10000        16384        348.8            42251

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 15:44:20 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        50000        16384        767.9           249132

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 15:45:34 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        50000        16384        673.1           274311

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 15:46:58 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        50000        16384        622.1           292199

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 15:48:27 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63        50000        16384        642.6           265013

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 15:49:54 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       100000        16384        309.5           691513

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 15:55:34 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       100000        16384        301.0           695142

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 16:01:24 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       100000        16384        292.4           663019

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 16:07:24 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       100000        16384        306.5           673775

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 16:13:04 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       200000        16384        252.0          1881610

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 16:27:29 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       200000        16384        252.4          1839646

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 16:41:55 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       200000        16384        121.1          2000925

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 17:12:29 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
    63       200000        16384        113.6          1974576

#  fs_mark  -t  40  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 40 thread(s) starting at Thu Jan 11 17:44:58 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 20:30:10 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5        10000        16384       2330.8            38006

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 20:30:28 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5        10000        16384       3883.5            34441

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 20:30:44 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5        10000        16384       2387.0            38633

#  fs_mark  -t  1  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 1 thread(s) starting at Thu Jan 11 20:30:57 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     0        10000        16384       3763.0            39005

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 20:31:14 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5        50000        16384       6082.4           235218

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 20:31:36 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5        50000        16384      10451.4           206523

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 20:31:56 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5        50000        16384       5915.7           229006

#  fs_mark  -t  5  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 5 thread(s) starting at Thu Jan 11 20:32:14 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     0        50000        16384      12683.6           233277

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 20:32:33 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       100000        16384       9327.7           545826

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 20:32:59 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       100000        16384      15373.0           477433

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 20:33:20 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       100000        16384       9648.5           561966

#  fs_mark  -t  10  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 10 thread(s) starting at Thu Jan 11 20:33:41 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     0       100000        16384      15635.6           585021

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 20:34:05 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       200000        16384      10379.5          1226245

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 20:34:41 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       200000        16384      17010.6          1126069

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 20:35:10 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       200000        16384      10815.5          1231285

#  fs_mark  -t  20  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 20 thread(s) starting at Thu Jan 11 20:35:41 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     0       200000        16384      17431.0          1441727

#  fs_mark  -t  40  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 40 thread(s) starting at Thu Jan 11 20:36:15 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       400000        16384      10520.8          2807025

#  fs_mark  -t  40  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 40 thread(s) starting at Thu Jan 11 20:37:15 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       400000        16384      17915.6          2593078

#  fs_mark  -t  40  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 40 thread(s) starting at Thu Jan 11 20:37:58 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     5       400000        16384      11065.8          2822412

#  fs_mark  -t  40  -n  10000  -s  16384  -w  8192  -d  /mnt 
#	Version 3.3, 40 thread(s) starting at Thu Jan 11 20:38:51 2024
#	Sync method: INBAND FSYNC: fsync() per file in write loop.
#	Directories:  no subdirectories used
#	File names: 40 bytes long, (16 initial bytes of time stamp with 24 random bytes at end of name)
#	Files info: size 16384 bytes, written with an IO size of 8192 bytes per write
#	App overhead is time in microseconds spent in the test not doing file writing related system calls.
#
FSUse%        Count         Size    Files/sec     App Overhead
     0       400000        16384      17950.3          3273232
